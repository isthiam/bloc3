# """
# Django settings for olympic_tickets project.

# Generated by 'django-admin startproject' using Django 5.2.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/
# """
# import os
# import dj_database_url
# from pathlib import Path
# from dotenv import load_dotenv

# load_dotenv()  # utile pour le mode local

# BASE_DIR = Path(__file__).resolve().parent.parent

# DATABASES = {
#     'default': dj_database_url.config(conn_max_age=600, ssl_require=True)
# }
# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
#     # BASE_DIR = Path(__file__).resolve().parent.parent
#     # load_dotenv(BASE_DIR / '.env')

# SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'unsafe-secret-key')
# DEBUG = os.getenv('DJANGO_DEBUG', 'False') == 'True'




# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False

# ALLOWED_HOSTS = ["*"]
# #ALLOWED_HOSTS = [os.environ.get("bloc3-p5p2vq-lingering-snow-8272") + ".fly.dev"]



# # Application definition

# INSTALLED_APPS = [
#     'admin_interface',
#     'colorfield',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'users',
#     'tickets',
#     'offres',
#     'contact', 
#     # 'django.middleware.security.SecurityMiddleware',
#     # 'django.contrib.sessions.middleware.SessionMiddleware',
#     # 'django.middleware.common.CommonMiddleware',
#     # 'django.middleware.csrf.CsrfViewMiddleware',
#     # 'django.contrib.auth.middleware.AuthenticationMiddleware',
#     # 'django.contrib.messages.middleware.MessageMiddleware',
#     # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'olympic_tickets.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [os.path.join(BASE_DIR, 'templates')],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'olympic_tickets.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases


#     # DATABASES = {
#     #     'default': dj_database_url.config(
#     #         default=os.environ.get("DATABASE_URL"),
#     #         conn_max_age=600,
#     #         ssl_require=True
#     #     )
#     # }




#     # DATABASES = {
#     #     'default': {
#     #         'ENGINE': 'django.db.backends.postgresql',
#     #         'NAME': os.getenv('DB_NAME'),
#     #         'USER': os.getenv('DB_USER'),
#     #         'PASSWORD': os.getenv('DB_PASSWORD'),
#     #         'HOST': os.getenv('DB_HOST'),
#     #         'PORT': os.getenv('DB_PORT'),
#     #     }
#     # }



# #DATABASES = {
# #    'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
# #}



# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/
# #BASE_DIR = Path(__file__).resolve().parent.parent



# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # important


# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# #MEDIA_URL = '/media/'
# #MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# LOGIN_URL = '/users/login/'

# AUTH_USER_MODEL = 'users.CustomUser'


# STATIC_URL = '/static/'
# STATICFILES_DIRS = [BASE_DIR / "static"]



#     # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#     # EMAIL_HOST = 'smtp.gmail.com'
#     # EMAIL_PORT = 587
#     # EMAIL_USE_TLS = True
#     # EMAIL_HOST_USER = 'Issakha.edu@gmail.com'
#     # EMAIL_HOST_PASSWORD = 'yejs bzqt iqkx wmxg'
#     # DEFAULT_FROM_EMAIL = EMAIL_HOST_USER






# CSRF_TRUSTED_ORIGINS = os.getenv("CSRF_TRUSTED_ORIGINS", "").split(",")



# if os.getenv("DISABLE_COLLECTSTATIC") == "true":
#     STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"


# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

import os
import dj_database_url
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'unsafe-secret-key')

DEBUG = os.getenv('DJANGO_DEBUG', 'False') == 'True'

ALLOWED_HOSTS = [
    "jeuxolympiqueparis2024.fly.dev",
    "localhost",
    "127.0.0.1",
]


CSRF_TRUSTED_ORIGINS = ["https://jeuxolympiqueparis2024.fly.dev"]


# Database
DATABASES = {
    'default': dj_database_url.config(conn_max_age=600)
}
# Application definition
INSTALLED_APPS = [
    'admin_interface',
    'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'tickets',
    'offres',
    'contact',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'olympic_tickets.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'olympic_tickets.wsgi.application'

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = '/users/login/'
AUTH_USER_MODEL = 'users.CustomUser'

if os.getenv("DISABLE_COLLECTSTATIC") == "true":
    STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"
